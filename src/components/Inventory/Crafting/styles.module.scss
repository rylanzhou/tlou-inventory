@import '~/styles/variables.scss';

.Text {
  display: flex;
  flex-direction: column;
  height: 10rem;
  margin: 1rem 0;
  gap: 0.6rem;

  .name {
    font-size: 1.4rem;
    color: $highlight;
    font-weight: 500;
  }

  .description {
    flex: 1;
    font-size: 1.35rem;
    color: #bbb;
    font-weight: normal;
  }

  .control-key {
    display: inline-block;
    padding: 0 0.3rem;
    border-radius: 2px;
    font-size: 0.9rem;
    font-weight: 700;
    background-color: rgba(255, 255, 255, 0.7);
    color: #3f3f3f;

    &.active {
      background-color: $highlight;
    }
  }

  .recipe {
    font-size: 1.35rem;

    span {
      color: $highlight;
      font-weight: 500;

      &.insufficient {
        color: $insufficient-color-highlight;
      }
    }
  }
}

.Material {
  padding: 1.5rem 0;

  .material-list {
    display: flex;
    justify-content: space-between;
    // increase width by default to hide "melee" material
    width: calc(100% + 5.4rem);
    list-style: none;
    transition: width $transition;

    &.more {
      width: 100%;
    }

    li {
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: 0.4rem;

      .item {
        position: relative;
        display: flex;
        align-items: center;
        justify-content: center;
        height: 3rem;
        width: 3rem;
        border-radius: 50%;
        border: 1px solid transparent;
        overflow: hidden;
        transition:
          color $transition,
          border-color $transition;

        .progress {
          position: absolute;
          top: 50%;
          left: 50%;
          // flip the progress so that it looks like it's consuming the material when the progress goes from 100 to 0
          transform: translate(-50%, -50%) scaleX(-1);
          width: calc(100% + 0.6rem);
          height: calc(100% + 0.6rem);
          opacity: 0;
          stroke: rgba(255, 255, 255, 0.7);
          stroke-width: 0.22rem;
          transition: opacity $transition;
        }

        // create a sector to indicate partial material
        &::after {
          content: '';
          z-index: -1;
          position: absolute;
          inset: 0;
          background: conic-gradient(
            rgba(255, 255, 255, 0.15) 0deg,
            rgba(255, 255, 255, 0.15) calc(360deg * var(--portion)),
            transparent calc(360deg * var(--portion)),
            transparent 360deg
          );
        }
      }

      .count {
        font-size: 1.2rem;
        transition: color $transition;
      }

      &.active {
        .item {
          color: $highlight;

          .progress {
            opacity: 1;
          }

          &::after {
            background: conic-gradient(
              rgba(255, 255, 255, 0.15) 0deg,
              rgba(255, 255, 255, 0.15) calc(360deg * var(--portion)),
              transparent calc(360deg * var(--portion)),
              transparent 360deg
            );
          }
        }

        .count {
          color: $highlight;
        }
      }

      // when material is insufficient, display red progress ring, turn count to red
      &.insufficient {
        .item {
          .progress {
            opacity: 1;
            stroke: $insufficient-color;
          }
        }

        .count {
          color: $insufficient-color;
        }

        &.active {
          .item {
            .progress {
              stroke: $insufficient-color-highlight;
            }
          }

          .count {
            color: $insufficient-color-highlight;
          }
        }
      }
    }
  }
}

.Tools {
  display: grid;
  gap: 1rem;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(2, 5.3rem);
  place-items: center;
  margin: 1.5rem 0;

  .tile {
    position: relative;
    width: 100%;
    height: 100%;

    .background {
      position: absolute;
      z-index: -1;
      top: 50%;
      width: 100%;
      height: 100%;
      border-top: 1px solid transparent;
      border-bottom: 1px solid transparent;
      transform: translateY(-50%);
      background-color: rgba(255, 255, 255, 0.05);
      transition:
        background-color $transition,
        height 0.5s ease-in-out;

      // progress bar when crafting
      &::after {
        content: '';
        position: absolute;
        left: 0;
        top: 0;
        height: 100%;
        width: 0;
        background: linear-gradient(
          to right,
          rgba(255, 255, 255, 0.05) 50%,
          rgba(255, 255, 255, 0.2) 100%
        );
      }
    }

    svg {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      width: 2.4rem;
      height: 2.4rem;
      fill: $highlight;
    }

    &.melee {
      svg {
        width: 2.8rem;
        height: 2.8rem;
      }
    }

    &.smoke-bomb {
      svg {
        width: 2rem;
        height: 2rem;
      }
    }

    .number {
      position: absolute;
      bottom: 0.3rem;
      right: 0.5rem;
      font-size: 1.2rem;
      color: rgba(255, 255, 255, 0.7);
      opacity: 1;
      transition: opacity $transition;

      .count {
        font-size: 1.4rem;
        transition: color $transition;
      }

      .capacity {
        display: none;
        position: relative;
        padding-left: 0.4rem;
        margin-left: 0.3rem;
        color: rgba(255, 255, 255, 0.7);

        &::before {
          content: '';
          position: absolute;
          top: 60%;
          left: 0;
          transform: translateY(-50%);
          width: 1.5px;
          height: 0.6rem;
          background-color: rgba(255, 255, 255, 0.7);
        }
      }
    }

    // When hovering, display top and bottom borders, lighten background, highlight count, display capacity
    &.active {
      .background {
        border-color: rgba(255, 255, 255, 0.7);
        background-color: rgba(255, 255, 255, 0.1);

        &::before,
        &::after {
          opacity: 1;
        }
      }

      .number {
        .count {
          color: $highlight;
        }

        .capacity {
          display: inline-block;
        }
      }
    }

    // When crafting, decrease the height, hide the number, display progress bar
    &.crafting {
      .background {
        height: 70%;

        &::after {
          animation: craft-progress 2s ease forwards;
        }
      }

      .number {
        opacity: 0;
      }
    }

    &.insufficient {
      svg {
        fill: #999;
      }
    }
  }
}

.Action {
  display: flex;
  align-items: center;
  justify-content: flex-end;
  gap: 1rem;
  margin: 1.2rem 0 0.2rem;
  font-size: 1.2rem;

  .option {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    color: $highlight;
    transition: color $transition;

    .control-key {
      font-size: 0.8rem;
      padding: 0.2rem 0.2rem;
      background-color: $highlight;
      color: #3f3f3f;
      font-weight: 500;
      border-radius: 2px;
    }

    .long-control-key {
      position: relative;
      width: 1.2rem;
      height: 1.2rem;
      line-height: 1.2rem;
      border-radius: 50%;
      outline-offset: 0.167rem;
      outline: 2px #9996 solid;
      font-size: 1rem;
      text-align: center;
      font-weight: 500;
      color: #3f3f3f;

      span {
        position: absolute;
        top: 50%;
        left: 50%;
        width: 1.2rem;
        height: 1.2rem;
        line-height: 1.2rem;
        border-radius: 50%;
        font-size: 1rem;
        background-color: $highlight;
        transform: translate(-50%, -50%);
        transition:
          height $transition,
          width $transition,
          line-height $transition,
          font-size $transition,
          background-color $transition;
      }

      .progress {
        position: absolute;
        top: 50%;
        left: 50%;
        width: calc(100% + 0.7rem);
        transform: translate(-50%, -50%);
        opacity: 0;
        transition: opacity $transition;
        stroke-width: 0.11rem;
        stroke: $highlight;
      }

      // the animated ring when crafting current item is available
      &::after {
        content: '';
        position: absolute;
        inset: -0.27rem;
        border-radius: 50%;
        opacity: 1;
        background: conic-gradient(transparent 270deg, $highlight 360deg);
        -webkit-mask: radial-gradient(circle, #0000 63%, #fff9 63%);
        mask: radial-gradient(circle, #0000 63%, #fff9 63%);
        animation: rotate 3s linear infinite;
        transition: opacity $transition;
      }
    }

    &.disabled {
      color: #999;

      .long-control-key {
        span {
          background-color: #999;
        }

        &::after {
          opacity: 0;
        }
      }
    }
  }

  // when crafting, hide rotating indicator, display progress ring, decrease the size of the control key
  &.crafting {
    .long-control-key {
      span {
        height: 1.1rem;
        width: 1.1rem;
        line-height: 1.1rem;
        font-size: 0.9rem;
      }

      .progress {
        opacity: 1;
      }

      &::after {
        opacity: 0;
      }
    }
  }
}

@keyframes rotate {
  100% {
    transform: rotate(360deg);
  }
}

@keyframes craft-progress {
  to {
    width: 100%;
  }
}
